<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">
    <system:Double x:Key="MinWidthMenuButton">123.0</system:Double>

    <ControlTemplate x:Key="ExpanderToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" 
              MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" 
              HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Border Grid.Column="1" Grid.Row="0" x:Name="Border" CornerRadius="0,5,5,0" BorderThickness="0" Background="Transparent"/>
            <Border Grid.Column="0" Grid.Row="1" x:Name="TxtBorder" CornerRadius="5,0,0,5" BorderThickness="0" Background="Transparent" HorizontalAlignment="Stretch">
                <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
            </Border>
            <Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" 
                  VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Fill="Transparent"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5" TargetName="Border"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <ContentPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="ListBoxItemTemplate" DataType="{x:Type ListBoxItem}">
        <ContentControl Content="{Binding}" HorizontalContentAlignment="Stretch" />
    </DataTemplate>

    <Style TargetType="{x:Type ListBox}" x:Key="MenuListBoxStyle" >
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="ItemTemplate" Value="{StaticResource ListBoxItemTemplate}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border x:Name="LayoutRoot" Background="{TemplateBinding Background}" BorderBrush="Transparent"
                                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer x:Name="ScrollViewer" Padding="{TemplateBinding Padding}"
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                      IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderHeaderStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="Myriad Pro" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <Style TargetType="{x:Type Expander}" x:Key="MenuRepertoire">
        <Setter Property="IsExpanded" Value="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition x:Name="ContentRow" Height="0" />
                        </Grid.RowDefinitions>
                        <!--Template Header-->
                        <ToggleButton OverridesDefaultStyle="True" Template="{StaticResource ExpanderToggleButton}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Height="32">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Rectangle x:Name="RectangleMenu"  Grid.Column="0" Width="3" Fill="{DynamicResource BorderControlsColor}" Height="32" Visibility="Collapsed" />
                                <Path Grid.Column="1"  Data="M16.219 16.219l0.797-1.313-4.5-2.719v-5.203h-1.5v6zM12 2.016c5.484 0 9.984 4.5 9.984 9.984s-4.5 9.984-9.984 9.984-9.984-4.5-9.984-9.984 4.5-9.984 9.984-9.984z" 
                                      Stretch="Uniform" Fill="{DynamicResource IconPathColor}" Width="16" Height="16" 
                                      HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,0,10,0" x:Name="Path" />
                                <TextBlock  Grid.Column="2" Text="Activité" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" 
                                            Foreground="{DynamicResource TextColor}" Style="{StaticResource ExpanderHeaderStyle}"  />
                                <ContentPresenter Grid.Column="3" Margin="4" ContentSource="Header" RecognizesAccessKey="True" />
                            </Grid>
                        </ToggleButton>
                        <ContentPresenter Margin="4" x:Name="Content" Grid.Row="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ContentRow" Property="Height" Value="{Binding DesiredHeight, ElementName=Content}" />
                            <Setter TargetName="RectangleMenu" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="Path" Property="Margin" Value="7,0,10,0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Expander}" x:Key="MenuOutils">
        <Setter Property="IsExpanded" Value="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition x:Name="ContentRow" Height="0" />
                        </Grid.RowDefinitions>
                        <!--Template Header-->
                        <ToggleButton OverridesDefaultStyle="True" Template="{StaticResource ExpanderToggleButton}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Height="32">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Rectangle x:Name="RectangleMenu"  Grid.Column="0" Width="3" Fill="{DynamicResource BorderControlsColor}" Height="32" Visibility="Collapsed" />
                                <Path Grid.Column="1" x:Name="Path" Data="M27.783 7.936c0.959 2.313 0.502 5.074-1.379 6.955-2.071 2.071-5.201 2.395-7.634 1.022l-1.759 1.921 1.255 1.26 0.75-0.75c0.383-0.384 1.005-0.384 1.388 0l6.082 6.144c0.384 0.383 0.384 1.005 0 1.388l-2.776 2.776c-0.383 0.384-1.005 0.384-1.388 0l-6.082-6.144c-0.384-0.383-0.384-1.005 0-1.388l0.685-0.685-1.196-1.199-8.411 9.189c-0.767 0.767-2.010 0.767-2.776 0l-0.694-0.694c-0.767-0.767-0.767-2.010 0-2.776l9.582-8.025-6.364-6.381-2.010-0.001-2.326-3.74 1.872-1.875 3.825 2.341 0.025 1.968 6.438 6.463 1.873-1.568c-1.831-2.496-1.64-6.012 0.616-8.268 1.872-1.872 4.618-2.337 6.925-1.396l-4.124 4.067 3.471 3.471 4.132-4.075zM6.15 25.934c-0.383-0.383-1.004-0.383-1.388 0-0.384 0.384-0.384 1.005 0 1.389 0.384 0.383 1.005 0.383 1.388 0 0.384-0.385 0.384-1.006 0-1.389z" 
                                      Stretch="Uniform" Fill="{DynamicResource IconPathColor}" Width="16" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,0,10,0" />
                                <TextBlock  Grid.Column="2" Text="Outils" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" 
                                            Foreground="{DynamicResource TextColor}" Style="{StaticResource ExpanderHeaderStyle}"  />
                                <ContentPresenter Grid.Column="3" Margin="4" ContentSource="Header" RecognizesAccessKey="True" />
                            </Grid>
                        </ToggleButton>
                        <ContentPresenter Margin="4" x:Name="Content" Grid.Row="1" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ContentRow" Property="Height" Value="{Binding DesiredHeight, ElementName=Content}" />
                            <Setter TargetName="RectangleMenu" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="Path" Property="Margin" Value="7,0,10,0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StyleMenuPrincipalButton"  TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="IsHitTestVisible" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height" Value="30" />
        <Setter Property="Margin" Value="12,0,12,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" Height="{TemplateBinding Height}" HorizontalAlignment="Stretch">
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0" Margin="4">
                                <Path Data="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=Tag}" 
                                      Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Height="24" Width="24"
                                      Fill="{DynamicResource TextColor}"/>
                            </Grid>
                            <ContentPresenter Grid.Column="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"  Height="{TemplateBinding Height}" x:Name="ContentPresenter" >
                                <ContentPresenter.Resources>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="FontFamily" Value="Myriad Pro"/>
                                        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
                                        <Setter Property="FontSize" Value="14px"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Foreground" Value="LightGray"/>
                                                <Setter Property="Cursor" Value="No"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True" >
                            <Setter Property="Background" Value="{DynamicResource BorderControlsColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StyleButtonMainMenu" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="IsHitTestVisible" Value="True"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" Height="{TemplateBinding Height}" HorizontalAlignment="Stretch">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0" Margin="13,0,10,0">
                                <Path Data="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=Tag}" 
                                      Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5"
                                      Fill="{DynamicResource TextColor}" Width="16" Height="16"/>
                            </Grid>

                            <ContentPresenter Grid.Column="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Height="{TemplateBinding Height}">
                                <ContentPresenter.Resources>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="FontSize" Value="16" />
                                        <Setter Property="FontFamily" Value="Myriad Pro" />
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="HorizontalAlignment" Value="Left"/>
                                        <Setter Property="Foreground" Value="{StaticResource TextColor}" />
                                        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True" >
                            <Setter Property="Background" Value="{DynamicResource BackgroundControlsColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StyleButtonFormation"  TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{StaticResource BackgroundMenuBoutonContactFormation}"/>
        <Setter Property="Height" Value="26" />
        <Setter Property="Margin" Value="4"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" Height="{TemplateBinding Height}" HorizontalAlignment="Stretch">
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="4" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="4" />
                            </Grid.ColumnDefinitions>
                            <StackPanel Orientation="Horizontal" Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Center" >
                                <Grid Name="backgroundGrid" Width="14" Height="14">
                                    <Ellipse Fill="{StaticResource BackgroundMenuContourBouton}" Width="14" Height="14" />
                                    <Path Grid.Column="0" Data="M14.090 2.234c-1.141-0.823-2.572-1.234-4.296-1.234-1.312 0-2.418 0.29-3.317 0.868-1.427 0.906-2.185 2.444-2.277 4.614h3.306c0-0.632 0.184-1.241 0.553-1.827s0.995-0.879 1.878-0.879c0.897 0 1.516 0.238 1.854 0.713 0.339 0.477 0.508 1.004 0.508 1.582 0 0.503-0.252 0.963-0.556 1.382-0.167 0.244-0.388 0.468-0.661 0.674 0 0-1.793 1.15-2.581 2.074-0.457 0.536-0.498 1.338-0.538 2.489-0.003 0.082 0.028 0.251 0.315 0.251s2.317 0 2.572 0 0.308-0.189 0.312-0.272c0.018-0.419 0.065-0.633 0.142-0.875 0.145-0.457 0.537-0.856 0.979-1.199l0.91-0.628c0.821-0.64 1.477-1.165 1.766-1.577 0.494-0.678 0.841-1.512 0.841-2.501 0-1.615-0.571-2.833-1.71-3.655zM9.741 14.924c-1.14-0.034-2.080 0.754-2.116 1.99s0.858 2.051 1.998 2.085c1.19 0.035 2.105-0.728 2.141-1.963s-0.833-2.077-2.023-2.112z" Stretch="Uniform" Fill="White" Width="6" Height="8" />
                                </Grid>

                                <ContentPresenter x:Name="Presenter" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Height="{TemplateBinding Height}" Margin="8,0,0,0">
                                    <ContentPresenter.Resources>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="FontFamily" Value="Myriad Pro" />
                                            <Setter Property="Foreground" Value="{StaticResource TextBoutonColor}" />
                                            <Setter Property="VerticalAlignment" Value="Center" />
                                            <Setter Property="HorizontalAlignment" Value="Left" />
                                            <Setter Property="FontSize" Value="14px" />
                                            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                        </Style>
                                    </ContentPresenter.Resources>
                                </ContentPresenter>
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=ActualWidth, RelativeSource={RelativeSource Self}, Converter={StaticResource IsControlToMinWidth}, ConverterParameter={StaticResource MinWidthMenuButton}, UpdateSourceTrigger=PropertyChanged}" Value="True">
                            <Setter TargetName="Presenter" Property="Visibility" Value="Collapsed"/>
                            <Setter Property="Background" Value="Transparent"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>